% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{lsboost2}
\alias{lsboost2}
\title{CPP function for the second group boosting method in Huang (2022)}
\usage{
lsboost2(datay, p = 1L, bstop = 50L, nu = 0.1)
}
\arguments{
\item{datay}{An n by d matrix of variables with n observations and d variables.
n is the number of time periods in the data, where the first row gives the
first observation and the last row includes the most recent observation.}

\item{p}{A positive integer for the lag of VAR. Defaults to 1.}

\item{bstop}{The number of boosting steps. Defaults to 50.}

\item{nu}{The learning rate. Defaults to 0.1.}
}
\value{
\code{lsboost2} returns a list with the following components: \itemize{
\item y: The (n-p)*d matrix of the dependent variable on the left hand side of the
regression equation.
\item x: The d(n-p)*p matrix of the X matrix. Each (n-p)*p block includes the
p lags of a variable. Each lag is an (n-p)*1 column.
\item aic: A sequence of AIC values of length \code{bstop}.
\item df: A sequence of degree of freedom estimates of length \code{bstop}.
\item beta_mat: A \eqn{bstop*d*p} by d matrix of coefficient estimates. It stacks
all \code{bstop} \eqn{\phi_{g}} coefficient matrices in equation (7) in Huang (2022).
\item se_mat: A matrix of standard errors for \code{beta_mat}.
\item pval_mat: A matrix of p-values for \code{beta_mat}.
\item beta0_mat: A \eqn{d*bstop} matrix of intercept estimates for each boosting step.
\item step_mat: A \eqn{d^2*bstop} matrix that records which variable is updated at
each boosting step.
}
}
\description{
This function computes the LS-Boost2 estimates and their
p-values.
}
\examples{
\dontrun{
  # An example of bivariate vector autoregression
  library(boostvar)
  set.seed(123)
  p = 2
  d = 2
  nobs = 100
  bstop = 50
  y = matrix(0, nobs, d)
  b0 = matrix(c(0.02,0.03),2,1)
  b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
  b2 = matrix(c(0,0.25,0,0),2,2)
  for (i in 3:dim(y)[1]) {
    y[i,] = t(b0) + t(b1 \%*\%  y[i-1,]) + t(b2 \%*\% y[i-2,]) +
      c(rnorm(1,0,0.3), rnorm(1,0,0.2))
  }
  y = tail(y,-p)
  result = lsboost2(y, p = p, bstop = bstop, nu = 0.1)
  }
}
