?lsboost2
?lsboost1
?boostvar
?boostvar::boostvar
??boostvar
?boostls
library(boostvar)
?boostvar
?boostls
?boostls1
boostls2
?boostls1
?boostls2
?lsboost1
?lsboost2
library(boostvar)
?boostvar
?boostls
?boostls
?boostlscpp
?coef.boostvar
lsboost1
?lsboost1
?lsboost2
library(boostvar)
?boostvar
?`boostvar-package`
library(boostvar)
library(boostvar)
?boostvar
?`boostvar-package`
?`boostvar`
library(boostvar)
?boostvar
?`boostvar-package`
library(boostvar)
?boostvar
?lsboost1
library(boostvar)
devtools::load_all(".")
getwd()
setwd('C:\\Users\\xhuang3\\Desktop\\coding\\R\\boostvar')
devtools::load_all(".")
devtools::document()
devtools::check(".")
?lsboost1
library(boostvar)
?lsboost1
?lsboost1
?lsboost1
?boostvar
?boostvar
?lsboost1
library(boostvar)
library(boostvar)
library(boostvar)
library(boostvar)
?lsboost1
library(boostvar)
?lsboost1
library(boostvar)
?lsboost1
library(boostvar)
?lsboost1
library(boostvar)
?lsboost1
library(boostvar)
?lsboost1
library(boostvar)
library(boostvar)
?lsboost1
library(boostvar)
?lsboost1
library(boostvar)
?lsboost1
library(boostvar)
library(boostvar)
?lsboost1
?boostlscpp
?lsboost1
library(boostvar)
?lsboost1
library(boostvar)
?lsboost1
library(boostvar)
?lsboost1
?lsboost2
?boostls
?boostvar
boostvar::boostvar
?'boostvar::boostvar'
?`boostvar::boostvar`
?boostvar::boostvar
??boostver
??boostvar
library(boostvar)
??boostvar
library(boostvar)
?boostvar
?lsboost2
?lsboost1
source("~/My Economics/Research/hdvar/program/tables in the paper/cross_section_regression/test_lsboost.R", echo=TRUE)
a = boostls(y,x,bstop = 200, nu = 0.1)
a = boostls(y,x,bstop = 200, nu = 0.1)
plot(a$aic)
a = boostls(y,x,bstop = 10, nu = 0.1)
a$beta
source("~/My Economics/Research/hdvar/program/tables in the paper/cross_section_regression/test_lsboost.R", echo=TRUE)
source("~/My Economics/Research/hdvar/program/tables in the paper/cross_section_regression/test_lsboost.R", echo=TRUE)
library(boostvar)
source("~/My Economics/Research/hdvar/program/tables in the paper/cross_section_regression/test_lsboost.R", echo=TRUE)
a$beta
a$se
row.names(a$$se) <- a$$beta
row.names(a$se) <- a$$beta
row.names(a$se) <- a$beta
aa = row.names(a$se) <- a$beta
aa
aa = {row.names(a$se) <- a$beta;a$se}
aa
library(boostvar)
source("~/My Economics/Research/hdvar/program/tables in the paper/cross_section_regression/test_lsboost.R", echo=TRUE)
source("~/My Economics/Research/hdvar/program/testpkg/test_boostvar.R", echo=TRUE)
plot(a$aic)
#a = boostvar_standard(y, p = p, bstop = bstop, nu = 0.1, demean = TRUE)
# boost_single is the same as boost_standard. Just a name change.
# a = boostvar_single(y, p = p, bstop = bstop, nu = 0.1) # demean = TRUE)
a = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
#a = boostvar_standard(y, p = p, bstop = bstop, nu = 0.1, demean = TRUE)
# boost_single is the same as boost_standard. Just a name change.
# a = boostvar_single(y, p = p, bstop = bstop, nu = 0.1) # demean = TRUE)
a = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 2)
plot(a$aic)
library(boostvar)
?`boostvar-package`
library(boostvar)
?`boostvar-package`
library(boostvar)
?`boostvar-package`
library(boostvar)
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 2
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
y = tail(y,-p)
result1 = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 2
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
y = tail(y,-p)
result1 = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
plot(result1$aic)
result1 = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
result1 = boostvar(y, p = p, bstop = 1000, nu = 0.1, group.type = 1)
plot(result1$aic)
which.min(result1$aic)
result$pval
result1$pval
a = read.csv("#'   # An example of bivariate vector autoregression
#'   library(boostvar)
#'   set.seed(123)
#'   p = 2
#'   d = 2
#'   nobs = 100
#'   bstop = 50
#'   y = matrix(0, nobs, d)
#'   b0 = matrix(c(0.02,0.03),2,1)
#'   b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
#'   b2 = matrix(c(0,0.25,0,0),2,2)
#'   for (i in 3:dim(y)[1]) {
#'     y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
#'       c(rnorm(1,0,0.3), rnorm(1,0,0.2))
#'   }
#'   y = tail(y,-p)
#'   result1 = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1, intercept = TRUE)
#'   result2 = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type ")
a = read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", header = TRUE)
View(a)
a = read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", header = TRUE, sep = ';')
View(a)
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 2
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
y = tail(y,-p)
result = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
dim(result$beta)
dim(result$pval)
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 3
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
y = tail(y,-p)
result = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
dim(result$beta)
dim(result$pval)
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 3
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
y = tail(y,-p)
result = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
dim(result$beta)
dim(result$pval)
result$beta
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 1
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 2
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
y = tail(y,-p)
result = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
dim(result$beta)
dim(result$pval)
result$beta[,,2,3]
# Use the random seed 0 in the original simulation program.
redwine = read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", header = TRUE, sep = ';')
names(redwine)
?boostls
# Use the random seed 0 in the original simulation program.
redwine = read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", header = TRUE, sep = ';')
result = boostls(y = redwine$quality,
x = redwine[,-1]),
# Use the random seed 0 in the original simulation program.
redwine = read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", header = TRUE, sep = ';')
result = boostls(y = redwine$quality,
x = redwine[,-1],
bstop = 100,
nu = 0.1)
result$n
library(lars)
data("diabetes")
View(diabetes)
View(diabetes)
View(diabetes)
diabetes$x2
# Use the random seed 0 in the original simulation program.
redwine = read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", header = TRUE, sep = ';')
redwine = redwine[1:100,]
result = boostls(y = redwine$quality,
x = redwine[,-1],
bstop = 100,
nu = 0.1)
result$beta
a = result$beta
View(a)
View(a)
source("~/My Economics/Research/hdvar/program/tables in the paper/cross_section_regression/test_lsboost.R", echo=TRUE)
# Use the random seed 0 in the original simulation program.
redwine = read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", header = TRUE, sep = ';')
redwine = redwine[1:100,]
result = boostls(y = redwine$quality,
x = redwine[,-1],
bstop = 100,
nu = 0.1)
redwine$quality
x = redwine[,-1]
dim(x)
dim(redwine)
names(redwine)
# Use the random seed 0 in the original simulation program.
redwine = read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", header = TRUE, sep = ';')
redwine = redwine[1:100,]
result = boostls(y = redwine$quality,
x = redwine[,-1],
bstop = 100,
nu = 0.1)
View(result)
a = result$beta
View(a)
View(redwine)
adat = redwine[,-1]
View(adat)
# Use the random seed 0 in the original simulation program.
redwine = read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", header = TRUE, sep = ';')
redwine = redwine[1:100,]
result = boostls(y = redwine$quality,
x = redwine[,-c("quality")],
bstop = 100,
nu = 0.1)
# Use the random seed 0 in the original simulation program.
redwine = read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv", header = TRUE, sep = ';')
redwine = redwine[1:100,]
result = boostls(y = redwine$quality,
x = subset(redwine, select = -c(quality)),
bstop = 100,
nu = 0.1)
a = result$beta
View(a)
# Use the random seed 0 in the original simulation program.
data.link = "https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv"
redwine = read.csv(data.link, header = TRUE, sep = ';')
redwine = redwine[1:100,]
result = boostls(y = redwine$quality,
x = subset(redwine, select = -c(quality)),
bstop = 50,
nu = 0.1)
# Use the random seed 0 in the original simulation program.
data.link = "https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv"
redwine = read.csv(data.link, header = TRUE, sep = ';')
redwine = redwine[1:100,]   # Try the first 100 observations.
result = boostls(y = redwine$quality,
x = subset(redwine, select = -c(quality)),
bstop = 50,
nu = 0.1)
dim(result$beta)
dim(result$pval)
result$se
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 1
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 2
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
y = tail(y,-p)
result = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
dim(result$beta)
dim(result$pval)
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 2
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
#y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
y = tail(y,-p)
result = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
dim(result$beta)
dim(result$pval)
dim(result$beta)
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 1
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
#y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
y = tail(y,-p)
result = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
dim(result$beta)
dim(result$pval)
dim(result$se)
library(boostvar)
# An example of bivariate vector autoregression
set.seed(123)
p = 2
d = 2
nobs = 100
bstop = 50
y = matrix(0, nobs, d)
b0 = matrix(c(0.02,0.03),2,1)
b1 = matrix(c(0.5,0.4,0.1,0.5),2,2)
b2 = matrix(c(0,0.25,0,0),2,2)
for (i in (p+1):dim(y)[1]) {
y[i,] = t(b0) + t(b1 %*%  y[i-1,]) + t(b2 %*% y[i-2,]) +
c(rnorm(1,0,0.3), rnorm(1,0,0.2))
}
y = tail(y,-p)
result = boostvar(y, p = p, bstop = bstop, nu = 0.1, group.type = 1)
dim(result$beta)
dim(result$pval)
source("~/My Economics/Research/hdvar/program/testpkg/test_boostvar.R", echo=TRUE)
summary(b)
source("~/My Economics/Research/hdvar/program/tables in the paper/bivariate VAR example_barplotv2.R", echo=TRUE)
source("~/My Economics/Research/hdvar/program/tables in the paper/bivariate VAR example_lineplot.R", echo=TRUE)
library(boostvar)
source("C:/Users/xhuang3/Desktop/coding/R/boostvar/R/boostls.R", echo=TRUE)
?boostls
library(boostvar)
?boostls
?boostvar
library(boostvar)
?boostvar
library(boostvar)
?boostvar
library(boostvar)
?boostvar
library(boostvar)
?boostvar
?lsboost1
?lsboost2
?boostlscpp
library(boostvar)
?boostlscpp
?`boostvar-package`
library(boostvar)
?`boostvar-package`
library(boostvar)
?`boostvar-package`
